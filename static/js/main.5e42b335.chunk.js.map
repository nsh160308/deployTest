{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/utils/ImageSlider.js","components/views/LandingPage/Sections/CheckBox.js","components/views/LandingPage/Sections/Datas.js","components/views/LandingPage/Sections/RadioBox.js","components/views/LandingPage/Sections/SearchFeature.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/utils/FileUpload.js","components/views/UploadProductPage/UploadProductPage.js","components/views/DetailProductPage/Sections/ProductImage.js","components/views/DetailProductPage/Sections/ProductInfo.js","components/views/DetailProductPage/DetailProductPage.js","components/views/CartPage/Sections/UserCardBlock.js","components/utils/Paypal.js","components/views/CartPage/CartPage.js","components/views/HistoryPage/HistoryPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","ImageSlider","autoplay","images","map","image","index","key","style","width","height","src","Panel","Collapse","CheckBox","useState","Checked","setChecked","defaultActiveKey","header","list","value","Fragment","onChange","currentIndex","indexOf","newChecked","splice","handleFilters","handleToggle","_id","checked","name","continents","price","RadioBox","Value","setValue","renderRadioBoxList","Group","event","target","Search","Input","SearchFeature","SearchTerm","setSearchTerm","placeholder","refreshFunction","Meta","Card","LandingPage","Products","setProducts","Skip","setSkip","Limit","PostSize","setPostSize","Filters","setFilters","getProducts","skip","limit","body","post","success","loadMore","productInfo","postSize","alert","renderCards","product","lg","md","xs","cover","href","title","description","filters","category","newFilters","priceValues","array","parseInt","handlePrice","showFilteredResult","margin","textAlign","gutter","display","justifyContent","newSearchTerm","searchTerm","onClick","preventDefault","console","log","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","className","level","Item","prefix","color","onBlur","fontSize","border","padding","borderRadius","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","confirmPassword","oneOf","lastname","moment","unix","registerUser","errmsg","label","hasFeedback","validateStatus","SubMenu","Menu","MenuItemGroup","ItemGroup","LeftMenu","mode","userData","paddingBottom","count","cart","length","marginRight","status","NavBar","visible","setVisible","position","zIndex","placement","closable","onClose","Footer","flexDirection","alignItems","FileUpload","Images","setImages","onDrop","files","formData","FormData","append","filePath","getRootProps","getInputProps","overflow","newImages","deleteHandler","alt","TextArea","Continents","UploadProductPage","setTitle","Description","setDescription","Price","setPrice","Continent","setContinent","maxWidth","marginBottom","currentTarget","item","writer","Axios","ProductImage","detail","original","thumbnail","items","ProductInfo","sold","views","size","productId","addToCart","DetailProductPage","match","params","Product","setProduct","UserCardBlock","renderCartImage","products","quantity","Paypal","total","this","env","client","sandbox","production","currency","onError","onSuccess","payment","onCancel","React","Component","CartPage","Total","setTotal","ShowTotal","setShowTotal","ShowSuccess","setShowSuccess","cartItems","forEach","userCart","cartItem","productDetail","getCartItems","calculateTotal","cartDetail","movePage","removeCartItem","marginTop","icon","SmileOutlined","extra","imageStyle","paypalSuccessData","request","onSuccessBuy","paymentData","HistoryPage","dateOfPurchase","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e42b335.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART,\n    GET_CART_ITMES,\n    REMOVE_CART_ITEM,\n    ON_SUCCESS_BUY\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\nexport function addToCart(_id){\n    let body = {\n        productId : _id\n    }\n    \n    const request = axios.post(`${USER_SERVER}/addToCart`, body)\n    .then(response => response.data);\n\n    return {\n        type: ADD_TO_CART,\n        payload: request\n    }\n}\n\nexport function getCartItems(cartItems, userCart){\n    const request = axios.get(`/api/product/products_by_id?id=${cartItems}&type=array`)\n    .then(response => {\n\n        // cartItem들에 해당하는 정보들을\n        // product 콜렉선에서 가져오고\n        // quantity 정보를 넣어줍니다.\n        userCart.forEach(cartItem => {\n\n            response.data.forEach((productDetail, index) => {\n\n                if(cartItem.id === productDetail._id) {\n\n                    response.data[index].quantity = cartItem.quantity\n                    \n                }\n            })\n        })\n        return response.data\n    });\n    \n    return {\n        type: GET_CART_ITMES,\n        payload: request\n    }\n}\n\n\nexport function removeCartItem(productId){\n    const request = axios.get(`${USER_SERVER}/removeFromCart?id=${productId}`)\n    .then(response => {\n\n        //productInfo, cart를 조합해서 CartDetail을 만듭니다.\n        response.data.cart.forEach(item => {\n            response.data.productInfo.forEach((product, index) => {\n                if(item.id === product._id) {\n                    response.data.productInfo[index].quantity = item.quantity;\n                }\n            })\n        })\n        return response.data\n    });\n\n    return {\n        type: REMOVE_CART_ITEM,\n        payload: request\n    }\n}\n\nexport function onSuccessBuy(paypalSuccessData){\n\n    console.log('pay succ');\n\n    const request = axios.post(`${USER_SERVER}/SuccessBuy`, paypalSuccessData)\n    .then(response => { return response.data\n    });\n\n    console.log(request);\n\n    return {\n        type: ON_SUCCESS_BUY,\n        payload: request\n    }\n}\n\n\n\n\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\nexport const ADD_TO_CART = 'add_to_cart';\nexport const GET_CART_ITMES = 'get_cart_items';\nexport const REMOVE_CART_ITEM = 'remove_cart_item';\nexport const ON_SUCCESS_BUY = 'on_success_buy';\n\n\n\n\n\n\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React from 'react'\r\nimport { Carousel } from 'antd';\r\n\r\nfunction ImageSlider(props) {\r\n    return (\r\n        <div>\r\n            <Carousel autoplay>\r\n                {props.images.map((image, index) => (\r\n                    <div key={index}>\r\n                        <img style={{width: '100%', height: '175px'}}\r\n                            src={`http://localhost:5000/${image}`} />\r\n                    </div>\r\n                ))}\r\n            </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSlider\r\n","import React, { useState } from 'react'\r\nimport { Collapse, Checkbox } from 'antd';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction CheckBox(props) {\r\n\r\n    const [Checked, setChecked] = useState([])\r\n\r\n    const handleToggle = (value) => {\r\n\r\n        //console.log('value', value);\r\n\r\n        //누른 것의 Index를 구합니다.\r\n\r\n        const currentIndex = Checked.indexOf(value)\r\n\r\n        //console.log(currentIndex);\r\n\r\n        //전체 Checked된 state에서 현재 누른 CheckBox가 있다면\r\n\r\n        const newChecked = [...Checked]\r\n        \r\n        if(currentIndex === -1) {\r\n            //없다면 넣어줍니다.\r\n            newChecked.push(value)\r\n        //있다면 빼줍니다.\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n\r\n        //새롭게 나온 state를 업데이트시킵니다.\r\n        setChecked(newChecked)\r\n        props.handleFilters(newChecked)\r\n\r\n    }\r\n\r\n    //console.log(Checked);\r\n\r\n    const renderCheckBoxLists = () => props.list &&\r\n    props.list.map((value, index) => (\r\n        <React.Fragment key={index}>\r\n            <Checkbox onChange={() => handleToggle(value._id)} checked={Checked.indexOf(value._id) === -1 ? false : true} />\r\n            <span>{value.name}</span>\r\n            \r\n        </React.Fragment>\r\n    ))\r\n    return (\r\n        <Collapse defaultActiveKey={['0']}>\r\n            <Panel header=\"This is panel header 1\" key=\"1\">\r\n                {renderCheckBoxLists()}\r\n            </Panel>\r\n        </Collapse>\r\n    )\r\n}\r\n\r\nexport default CheckBox\r\n","const continents = [\r\n    {\r\n        \"_id\": 1,\r\n        \"name\": \"Africa\"\r\n    },\r\n    {\r\n        \"_id\": 2,\r\n        \"name\": \"Europe\"\r\n    },\r\n    {\r\n        \"_id\": 3,\r\n        \"name\": \"Asia\"\r\n    },\r\n    {\r\n        \"_id\": 4,\r\n        \"name\": \"North America\"\r\n    },\r\n    {\r\n        \"_id\": 5,\r\n        \"name\": \"South America\"\r\n    },\r\n    {\r\n        \"_id\": 6,\r\n        \"name\": \"Australia\"\r\n    },\r\n    {\r\n        \"_id\": 7,\r\n        \"name\": \"Antarctica\"\r\n    }\r\n\r\n]\r\n\r\nconst price = [\r\n    {\r\n        \"_id\": 0,\r\n        \"name\": \"Any\",\r\n        \"array\": []\r\n    },\r\n    {\r\n        \"_id\": 1,\r\n        \"name\": \"$0 to $199\",\r\n        \"array\": [0, 199]\r\n    },\r\n    {\r\n        \"_id\": 2,\r\n        \"name\": \"$200 to $249\",\r\n        \"array\": [200, 249]\r\n    },\r\n    {\r\n        \"_id\": 3,\r\n        \"name\": \"$250 to $279\",\r\n        \"array\": [250, 279]\r\n    },\r\n    {\r\n        \"_id\": 4,\r\n        \"name\": \"$280 to $299\",\r\n        \"array\": [280, 299]\r\n    },\r\n    {\r\n        \"_id\": 5,\r\n        \"name\": \"More than $300\",\r\n        \"array\": [300, 1500000]\r\n    }\r\n]\r\n\r\nexport {\r\n    continents,\r\n    price\r\n}","import React, { useState } from 'react'\r\nimport { Radio, Collapse } from 'antd';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction RadioBox(props) {\r\n\r\n    const [Value, setValue] = useState(0)\r\n\r\n    const renderRadioBoxList = props.list && props.list.map((value, index) => (\r\n            <Radio key={index} value={value._id}>{value.name}</Radio>\r\n    ))\r\n\r\n\r\n    const handleChange = (event) => {\r\n\r\n        setValue(event.target.value);\r\n        props.handleFilters(event.target.value);\r\n        \r\n    }\r\n    return (\r\n        <Collapse defaultActiveKey={['0']}>\r\n            <Panel header=\"This is panel header 1\" key=\"1\">\r\n                \r\n                <Radio.Group onChange={handleChange} value={Value}>\r\n                    {renderRadioBoxList}\r\n                </Radio.Group>\r\n\r\n            </Panel>\r\n            \r\n        </Collapse>\r\n    )\r\n}\r\n\r\nexport default RadioBox\r\n","import React, { useState } from 'react'\r\nimport { Input } from 'antd';\r\n\r\nconst { Search } = Input;\r\n\r\nfunction SearchFeature(props) {\r\n\r\n    const [SearchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    const searchHandler = (event) => {\r\n        setSearchTerm(event.target.value);\r\n        props.refreshFunction(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Search\r\n                placeholder=\"input search text\"\r\n                onChange={searchHandler}\r\n                style={{ width: 200 }}\r\n                value={SearchTerm}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchFeature\r\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport { Icon, Col, Row, Card, Spin } from 'antd';\nimport ImageSlider from './../../utils/ImageSlider';\nimport CheckBox from './Sections/CheckBox';\nimport { continents, price } from './Sections/Datas';\nimport RadioBox from './Sections/RadioBox';\nimport SearchFeature from './Sections/SearchFeature';\n\nconst { Meta } = Card;\n\n\nfunction LandingPage() {\n\n    const [Products, setProducts] = useState([])\n\n    //Skip, Limit 관리\n    const [Skip, setSkip] = useState(0)\n    const [Limit, setLimit] = useState(8)\n\n    //더 보기 버튼 숨기기\n    const [PostSize, setPostSize] = useState(0)\n\n    //필터\n    const [Filters, setFilters] = useState({\n        continents: [],\n        price: []\n    })\n\n    //검색\n    const [SearchTerm, setSearchTerm] = useState(\"\")\n\n    useEffect(() => {\n\n        let body = {\n            skip: Skip,\n            limit: Limit\n        }\n\n        getProducts(body);\n\n    }, [])\n\n    const getProducts = (body) => {\n        axios.post('/api/product/products', body)\n            .then(response => {\n                if(response.data.success) {\n                    //console.log(response.data);\n                    //가져온 모든 데이터를 state로 관리한다.\n                    if(body.loadMore) {\n                        setProducts([...Products, ...response.data.productInfo])\n                    } else {\n                        setProducts(response.data.productInfo)\n                    }\n                    setPostSize(response.data.postSize)\n                } else {\n                    alert(\"상품을 가져오는 데 실패 했습니다.\");\n                }\n            })\n    }\n\n    // 더 보기 버튼 핸들링 함수\n    const loadMoreHandler = (event) => {\n\n        event.preventDefault();\n\n        //console.log('onClick!!');\n        let skip = Skip + Limit;\n        console.log('skip', skip)\n\n        let body = {\n            skip: skip,\n            limit: Limit,\n            loadMore: true\n        }\n\n        getProducts(body);\n\n        //스킵 업데이트\n        setSkip(skip);\n    }\n\n    const renderCards = Products.map((product, index) => {\n        \n        //console.log(product);\n\n        return <Col key={index} lg={6} md={8} xs={24}>\n        <Card\n            cover={<a href={`/product/${product._id}`}><ImageSlider images={product.images} /></a>}\n        >\n            <Meta\n                title={product.title}\n                description={`$${product.price}`}\n            />\n        </Card>\n        </Col>\n    })\n\n    const showFilteredResult = (filters) => {\n\n        let body = {\n            skip: 0,\n            limit: Limit,\n            filters: filters\n        }\n\n        getProducts(body)\n        setSkip(0)\n    }\n\n    const handlePrice = (filters) => {\n        const data = price;\n        let array = [];\n\n        for (let key in data) {\n\n            if(data[key]._id === parseInt(filters, 10)) {\n                array = data[key].array;\n            }\n        }\n\n        return array;\n    }\n\n    const handleFilters = (filters, category) => {\n\n        ///console.log('execute');\n\n        const newFilters = { ...Filters }\n\n        //CheckBox컴포넌트에서 넘어온 상태를\n        //해당 상태의 category에 따라서 업데이트한다.\n        newFilters[category] = filters\n\n\n        //라디오 박스는 다른방식으로 필터링합니다.\n        if(category === \"price\") {\n            let priceValues = handlePrice(filters)\n            newFilters[category] = priceValues\n        }\n\n        //새로운 함수를 만들단.\n        showFilteredResult(newFilters)\n        \n        setFilters(newFilters);\n    }\n\n    const updateSearchTerm = (newSearchTerm) => {\n\n        let body = {\n            skip: 0,\n            limit: Limit,\n            filters: Filters,\n            searchTerm: newSearchTerm\n        }\n\n        setSkip(0)\n        setSearchTerm(newSearchTerm);\n        getProducts(body)\n\n    }\n\n    return (\n        <div style={{ width: '75%', margin: '3rem auto'}}>\n\n            <div style={{ textAlign: 'center' }}>\n                <h2> 여행을 떠나자! <Icon type=\"rocket\" /> </h2>\n            </div>\n\n            <br />\n\n            {/* Filter */}\n\n            <Row gutter={[16, 16]}>\n                <Col lg={12} xs={24}>\n                    {/* Checkbox */}\n                    <CheckBox list={continents} handleFilters={filters => handleFilters(filters, \"continents\")}/>\n                </Col>\n                <Col lg={12} xs={24}>\n                    {/* Radiobox */}\n                    <RadioBox list={price} handleFilters={filters => handleFilters(filters, \"price\")}/>\n                </Col>\n            </Row>\n\n            <br />\n\n            {/* Search */}\n            <div style={{ display:'flex', justifyContent: 'flex-end', margin: '1rem auto' }}>\n                <SearchFeature refreshFunction={updateSearchTerm}/>\n            </div>\n\n            <br />\n\n            {/* Cards */}\n            <Row gutter={[16,16]} >\n                {renderCards}\n            </Row>\n            \n            <br />\n            <br />\n\n\n            {PostSize >= Limit &&\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <button onClick={loadMoreHandler}>더보기</button>\n            </div>\n            }\n            \n        </div>\n    )\n}\n\nexport default LandingPage\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n    <Menu.Item key=\"mail\">\n      <a href=\"/\">Home</a>\n    </Menu.Item>\n    <SubMenu title={<span>Blogs</span>}>\n      <MenuItemGroup title=\"Item 1\">\n        <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n        <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n      </MenuItemGroup>\n      <MenuItemGroup title=\"Item 2\">\n        <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n        <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n      </MenuItemGroup>\n    </SubMenu>\n  </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu, Badge, Icon  } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"history\">\n          <a href=\"/user/history\">history</a>\n        </Menu.Item>\n        <Menu.Item key=\"upload\">\n          <a href=\"/product/upload\">상품 업로드</a>\n        </Menu.Item>\n        <Menu.Item key=\"cart\" style={{ paddingBottom: 3}}>\n          <Badge count={user.userData && user.userData.cart.length}>\n            <a href=\"/user/cart\" className=\"head-example\" style={{ marginRight: -22, color: '#667777'}}>\n              <Icon type=\"shopping-cart\" style={{ fontSize: 30 }} />\n            </a>\n          </Badge>\n        </Menu.Item>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n    }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Logo</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n           <p> Happy Coding  <Icon type=\"smile\" /></p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport { Icon } from 'antd';\r\nimport axios from 'axios';\r\n\r\nfunction FileUpload(props) {\r\n    \r\n    //여러개의 이미지를 관리하기 위해서 Array로 설정합니다.\r\n    const [Images, setImages] = useState([])\r\n\r\n    //onDrop받는 함수\r\n    const dropHanler = (files) => {\r\n        //console.log('front1', files);\r\n\r\n        let formData = new FormData();\r\n\r\n        const config = {\r\n            header: {'content-type': 'multipart/form-data'}\r\n        }\r\n\r\n        formData.append(\"file\", files[0])\r\n\r\n\r\n        //파라미터로 받은 files를 axios를 이용해서 백엔드로 전달\r\n        //백엔드로 전달할 때, formData와 config를 전달하지 않으면 에러가 발생한다.\r\n        axios.post('/api/product/image', formData, config)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    //console.log('front2', response.data);\r\n                    setImages([...Images, response.data.filePath])\r\n                    props.refreshFunction([...Images, response.data.filePath])\r\n                } else {\r\n                    alert(\"파일 저장 실패\");\r\n                }\r\n            })\r\n        //then(Promise)는 백엔드에서 할 일을 다 끝내고 난 뒤 실행된다.\r\n    }\r\n\r\n    //onClick을 받는 함수\r\n    const deleteHandler = (image) => {\r\n        //console.log('onClick Event - ', image);\r\n\r\n        //image인자에 대한 index를 알아야 된다.\r\n        const currentIndex = Images.indexOf(image);\r\n        \r\n        //console.log(currentIndex);\r\n\r\n        //state를 복사 Object.assign과 동일구조\r\n        let newImages = [...Images];\r\n\r\n        //splice(start, deleteCount)\r\n        //currentIndex에서 시작해서, 하나를 지우겠다.\r\n        newImages.splice(currentIndex, 1)\r\n\r\n        //새로운 state가 나왔으니 setImages()로 업데이트\r\n        setImages(newImages)\r\n\r\n        //부모 컴포넌트 state 업데이트\r\n        props.refreshFunction(newImages)\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Dropzone onDrop={dropHanler}>\r\n                {({getRootProps, getInputProps}) => (\r\n                    <section>\r\n                    <div \r\n                        style={{ \r\n                            width: '300px', height: '240px', border: '1px solid lightgray',\r\n                            display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n                        }}\r\n                        {...getRootProps()}>\r\n                        <input {...getInputProps()} />\r\n                        <Icon type=\"plus\" style={{ fontSize: '3rem' }}/>\r\n                    </div>\r\n                    </section>\r\n                )}\r\n            </Dropzone>\r\n\r\n            <div style={{ display: 'flex', width: '300px', height: '240px', overflow: 'scroll' }}>\r\n                {Images.map((image, index) => (\r\n                    <div onClick={() => deleteHandler(image)} key={index}>\r\n                        <img style={{ minWidth: '300px', width: '300px', height: '240px' }}\r\n                            src={`http://localhost:5000/${image}`}\r\n                            alt={index} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUpload\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Input } from 'antd';\r\nimport FileUpload from './../../utils/FileUpload';\r\nimport Axios from 'axios';\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n    { key: 1, value: \"Africa\" },\r\n    { key: 2, value: \"Europe\" },\r\n    { key: 3, value: \"Asia\" },\r\n    { key: 4, value: \"North America\" },\r\n    { key: 5, value: \"South America\" },\r\n    { key: 6, value: \"Australia\" },\r\n    { key: 7, value: \"Antarctica\" }\r\n]\r\n\r\nfunction UploadProductPage(props) {\r\n\r\n    //state관리\r\n    const [Title, setTitle] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Price, setPrice] = useState(\"\")\r\n    const [Continent, setContinent] = useState(1)\r\n    const [Images, setImages] = useState([])\r\n\r\n\r\n    //onChange받는 함수들\r\n    const titleChangeHandler = (event) => {\r\n        setTitle(event.currentTarget.value);\r\n    }\r\n\r\n    const descriptionChangeHandler = (event) => {\r\n        setDescription(event.currentTarget.value);\r\n    }\r\n\r\n    const priceChangeHandler = (event) => {\r\n        setPrice(event.currentTarget.value);\r\n    }\r\n\r\n    const continentChangeHandler = (event) => {\r\n        setContinent(event.currentTarget.value)\r\n    }\r\n\r\n    //FileUpload의 이미지 정보를 받는 함수\r\n    const updateImages = (newImages) => {\r\n        setImages(newImages)\r\n    }\r\n\r\n    //onClick 받는 함수\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        console.log('click');\r\n\r\n        //유효성 검사\r\n        if(!Title || !Description || !Price || !Continent || !Images) {\r\n            return alert(\"모든 칸을 채워주셔야 됩니다.\");\r\n        }\r\n\r\n        //채운 값들을 서버에 request한다.\r\n        const body = {\r\n            //로그인한 사용자의 ID\r\n            writer : props.user.userData._id,\r\n            title: Title,\r\n            description: Description,\r\n            price: Price,\r\n            continents: Continent,\r\n            images: Images\r\n        }\r\n\r\n        Axios.post(\"/api/product\", body)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    alert(\"상품 업로드에 성공 했습니다.\")\r\n                    //저장을 성공하면 홈페이지로 돌려보내고 싶다.\r\n                    props.history.push('/');\r\n                } else {\r\n                    alert(\"상품 업로드에 실패 했습니다.\")\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <h2> 여행 상품 업로드 </h2>\r\n            </div>\r\n\r\n            <Form >\r\n            {/* drop-zone */}\r\n            <FileUpload refreshFunction={updateImages} />\r\n\r\n\r\n            <br />\r\n            <br />\r\n            <label>이름</label>\r\n            <Input onChange={titleChangeHandler} value={Title}/>\r\n            <br />\r\n            <br />\r\n            <label>설명</label>\r\n            <TextArea onChange={descriptionChangeHandler} value={Description}/>\r\n            <br />\r\n            <br />\r\n            <label>가격($)</label>\r\n            <Input onChange={priceChangeHandler} value={Price}/>\r\n            <br />\r\n            <br />\r\n            <select onChange={continentChangeHandler} value={Continent}>\r\n                {Continents.map((item) => (\r\n                    <option key={item.key} value={item.key}>{item.value}</option>\r\n                ))}\r\n            </select>\r\n            <br />\r\n            <br />\r\n            <Button onClick={submitHandler}>\r\n                확인\r\n            </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadProductPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\nfunction ProductImage(props) {\r\n\r\n    const [Images, setImages] = useState([])\r\n\r\n    useEffect(() => {\r\n        \r\n        if(props.detail.images && props.detail.images.length > 0) {\r\n            let images = [];\r\n\r\n            props.detail.images.map((item, index) => (\r\n                images.push({\r\n                    original: `http://localhost:5000/${item}`,\r\n                    thumbnail: `http://localhost:5000/${item}`\r\n                })\r\n            ))\r\n\r\n            setImages(images);\r\n        }\r\n    }, [props.detail])\r\n\r\n    return (\r\n        <div>\r\n            <ImageGallery items={Images} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductImage\r\n","import React from 'react'\r\nimport { Descriptions, Button } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../../../../_actions/user_actions';\r\n\r\n\r\nfunction ProductInfo(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const clickHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        //필요한 정보를 cart 필드에 넣어줍니다.\r\n        //1.필요한 정보는 상품에 대한 고유한 id\r\n        //2.상품의 개수\r\n        //3.언제 상품을 넣었는지에 대한 날짜정보\r\n\r\n        //dispatch(action)\r\n        console.log('1')\r\n        dispatch(addToCart(props.detail._id))\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Descriptions title=\"Product Info\" >\r\n                <Descriptions.Item label=\"Price\">{props.detail.price}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Sold\">{props.detail.sold}</Descriptions.Item>\r\n                <Descriptions.Item label=\"View\">{props.detail.views}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Description\">{props.detail.description}</Descriptions.Item>\r\n            </Descriptions>\r\n        \r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div style={{ display: 'flex', justifyContent: 'center'}}>\r\n                <Button size=\"large\" shape=\"round\" type=\"danger\" onClick={clickHandler}>\r\n                    Add to Cart\r\n                </Button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductInfo\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport ProductImage from './Sections/ProductImage';\r\nimport ProductInfo from './Sections/ProductInfo';\r\nimport { Col, Row } from 'antd';\r\n\r\nfunction DetailProductPage(props) {\r\n\r\n    //라우팅한 컴포넌트는 history, location, match의 데이터를 받는다.\r\n    //match는 Router 주소값에 우리가 원하는 정보를 붙여서 보내면\r\n    //이를 읽을 수 있다.\r\n    const productId = props.match.params.productId;\r\n\r\n    const [Product, setProduct] = useState({})\r\n    \r\n    //console.log(props.match);\r\n\r\n    useEffect(() => {\r\n        \r\n        axios.get(`/api/product/products_by_id?id=${productId}&type=single`)\r\n            .then(response => {\r\n                setProduct(response.data[0])\r\n            })\r\n            .catch(err => alert(err))\r\n\r\n\r\n    }, [])\r\n    return (\r\n        <div style={{ width: '100%', padding: '3rem 4rem' }}>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <h1>{Product.title}</h1>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <Row gutter={[16,16]}>\r\n                <Col lg={12} xs={24}>\r\n                    {/* ProductImage */}\r\n                    <ProductImage detail={Product} />\r\n                </Col>\r\n                <Col lg={12} xs={24}>\r\n                    {/* ProductImage */}\r\n                    <ProductInfo detail={Product} />\r\n                </Col>\r\n            </Row>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailProductPage\r\n","import React from 'react'\r\nimport \"./UserCardBlock.css\"\r\n\r\nfunction UserCardBlock(props) {\r\n    \r\n    const renderCartImage = (images) => {\r\n\r\n        if(images.length > 0) {\r\n\r\n            let image = images[0];\r\n            return `http://localhost:5000/${image}`\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const renderItems = () => {\r\n        \r\n        return props.products && props.products.map((product, index) => (\r\n            <tr key={index}>\r\n                <td>\r\n                    <img style={{ width: '70px'}} alt=\"product\"\r\n                        src={renderCartImage(product.images)} />\r\n                </td>\r\n                <td>\r\n                    {product.quantity} EA\r\n                </td>\r\n                <td>\r\n                    $ {product.price}\r\n                </td>\r\n                <td>\r\n                    <button onClick={() => props.removeItem(product._id)}>\r\n                        remove\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product Image</th>\r\n                        <th>Product Quantity</th>\r\n                        <th>Product Price</th>\r\n                        <th>Remove from Cart</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {renderItems()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCardBlock\r\n","import React from 'react';\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\n \r\nexport default class Paypal extends React.Component {\r\n    render() {\r\n        const onSuccess = (payment) => {\r\n            // Congratulation, it came here means everything's fine!\r\n                    console.log(\"The payment was succeeded!\", payment);\r\n                    \r\n                    this.props.onSuccess(payment)\r\n            \t\t// You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n \r\n        const onCancel = (data) => {\r\n            // User pressed \"cancel\" or close Paypal's popup!\r\n            console.log('The payment was cancelled!', data);\r\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n \r\n        const onError = (err) => {\r\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n            console.log(\"Error!\", err);\r\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n        }\r\n \r\n        let env = 'sandbox'; // you can set here to 'production' for production\r\n        let currency = 'USD'; // or you can set this value from your props or state\r\n        let total = this.props.total; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n \r\n        const client = {\r\n            sandbox:    'AQzoIJ_HusHQllL78z8eI8993JWM4-w56drDAOFtD6W0qKisAyeH0B0B_Emy4j6lM8LntpLI5Kh7U4wL',\r\n            production: 'YOUR-PRODUCTION-APP-ID',\r\n        }\r\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n        // For production app-ID:\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n \r\n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n        return (\r\n            <PaypalExpressBtn \r\n            env={env} \r\n            client={client} \r\n            currency={currency} \r\n            total={total} \r\n            onError={onError} \r\n            onSuccess={onSuccess} \r\n            onCancel={onCancel}\r\n            style={{\r\n                size: 'medium',\r\n                shape: 'rect',\r\n                color: 'blue',\r\n                label: 'checkout'\r\n            }} />\r\n        );\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCartItems, removeCartItem, onSuccessBuy } from '../../../_actions/user_actions'\r\nimport UserCardBlock from './Sections/UserCardBlock';\r\nimport { Empty, Button, Result } from 'antd';\r\nimport { SmileOutlined } from '@ant-design/icons';\r\nimport Paypal from '../../utils/Paypal';\r\n\r\nfunction CartPage(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [Total, setTotal] = useState(0)\r\n    const [ShowTotal, setShowTotal] = useState(false)\r\n    const [ShowSuccess, setShowSuccess] = useState(false)\r\n\r\n    useEffect(() => {\r\n        console.log(props.user)\r\n        \r\n        let cartItems = [];\r\n\r\n        //리덕스 User state안에 cart안에 상품이 들어있는 지 확인\r\n        if(props.user.userData && props.user.userData.cart) {\r\n            if(props.user.userData.cart.length > 0) {\r\n                props.user.userData.cart.forEach((item) => {\r\n                    \r\n                    cartItems.push(item.id);\r\n                })\r\n\r\n                dispatch(getCartItems(cartItems, props.user.userData.cart))\r\n                .then(response => {\r\n                    calculateTotal(response.payload)\r\n                })\r\n            }\r\n        }\r\n\r\n    }, [props.user.userData])\r\n\r\n\r\n    const calculateTotal = (cartDetail) => {\r\n\r\n        let total = 0;\r\n\r\n        cartDetail.map((item, index) => {\r\n            total += parseInt(item.price) * item.quantity\r\n        })\r\n\r\n        setTotal(total)\r\n        setShowTotal(true);\r\n    }\r\n    \r\n    const removeFromCart = (productId) => {\r\n\r\n        dispatch(removeCartItem(productId))\r\n        .then(response => {\r\n\r\n            console.log(response);\r\n\r\n            if(response.payload.productInfo.length <= 0) {\r\n                setShowTotal(false)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const movePage = () => {\r\n\r\n        return props.history.push('/')\r\n    }\r\n\r\n    const transactionSuccess = (paypalSuccessData) => {\r\n\r\n        dispatch(onSuccessBuy({\r\n            paymentData : paypalSuccessData,\r\n            cartDetail: props.user.cartDetail\r\n        }))\r\n        .then(response => {\r\n            if(response) {\r\n                setShowTotal(false)\r\n                setShowSuccess(true)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <h1>My Cart</h1>\r\n\r\n            <div>\r\n                <UserCardBlock products={props.user.cartDetail} removeItem={removeFromCart}/>\r\n            </div>\r\n\r\n            \r\n\r\n        {ShowTotal ? \r\n            <div style={{ marginTop: '3rem' }}>\r\n            <h2>Total Amount: ${Total}</h2>\r\n            </div>\r\n            : ShowSuccess ?\r\n            <Result\r\n            icon={<SmileOutlined />}\r\n            title=\"결제가 완료됐습니다!\"\r\n            extra={<Button onClick={movePage} type=\"primary\">홈페이지로</Button>}\r\n            />\r\n            :\r\n            <Empty\r\n                style={{ marginTop: 30}}\r\n                image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n                imageStyle={{\r\n                height: 60,\r\n                }}\r\n                description={\r\n                <span>\r\n                    장바구니가 비었습니다.\r\n                </span>\r\n                }\r\n            >\r\n                <Button type=\"primary\" onClick={movePage}>구매하러 가기</Button>\r\n            </Empty>\r\n        }\r\n\r\n        {ShowTotal && <Paypal total={Total} onSuccess={transactionSuccess}/>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartPage\r\n","import React from 'react'\r\n\r\nfunction HistoryPage(props) {\r\n\r\n    return (\r\n        <div style={{ width: '80%', margin: '3rem auto '}}>\r\n            <div style={{ textAlign: 'center' }}>\r\n                <h1>history</h1>\r\n            </div>\r\n            <br />\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Payment Id</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Date of Purchase</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n\r\n                    {props.user.userData && props.user.userData.history.map((value, index) => {\r\n                        return <tr key={index}>\r\n                            <td>{value.id}</td>\r\n                            <td>{value.price}</td>\r\n                            <td>{value.quantity}</td>\r\n                            <td>{value.dateOfPurchase}</td>\r\n                        </tr>\r\n                    })}\r\n\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HistoryPage\r\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// 페이지 import\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\nimport UploadProductPage from './views/UploadProductPage/UploadProductPage';\nimport DetailProductPage from './views/DetailProductPage/DetailProductPage';\nimport CartPage from './views/CartPage/CartPage';\nimport HistoryPage from './views/HistoryPage/HistoryPage'\n\n//null   누구나 들어갈 수 있습니다/\n//true   로그인 한 사용자 만 안으로 들어갈 수 있습니다.\n//false  로그인 한 사용자는 안으로 들어갈 수 없습니다.\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route exact path=\"/product/upload\" component={Auth(UploadProductPage, true)} />\n          <Route exact path=\"/product/:productId\" component={Auth(DetailProductPage, null)} />\n          <Route exact path=\"/user/cart\" component={Auth(CartPage, true)} />\n          <Route exact path=\"/user/history\" component={Auth(HistoryPage, true)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART,\n    GET_CART_ITMES,\n    REMOVE_CART_ITEM,\n    ON_SUCCESS_BUY\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        case ADD_TO_CART:\n            return {...state, userData: {\n                ...state.userData,\n                cart: action.payload\n            }}\n        case GET_CART_ITMES:\n            return {...state, cartDetail: action.payload}\n        case REMOVE_CART_ITEM:\n            return {...state, cartDetail: action.payload.productInfo,\n            userData: {\n                ...state.userData,\n                cart: action.payload.cart\n            }}\n        case ON_SUCCESS_BUY:\n                return {...state, cartDetail: action.payload.cartDetail,\n                userData:{\n                    ...state.userData,\n                    cart: action.payload.cart\n                }}\n        default:\n            return state;\n    }\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}